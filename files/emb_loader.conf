#
## ZFSguru loader.conf
## LiveCD/Embedded distribution
#

# preloaded environment
mfsroot_load="YES"
mfsroot_type="md_image"
mfsroot_name="/boot/preloaded.ufs"

# future system environment
init_path="/rescue/init"
init_shell="/rescue/sh"
init_script="/preloaded.rc"
init_chroot="/system"

#
## ZFSguru advanced tuning
## note that editing loader.conf only works on Embedded/Root-on-ZFS installs
#

## KERNEL MEMORY
#
# Kernel memory is what ZFS uses and thus tuning this parameter may be useful.
# General recommendation is to set this variable at 1.5 times your RAM size,
# leaving the _max variable untouched.
# Example: if you have 4GiB RAM, then set the kmem_size to "6g" instead.
# 
# if you exceed the limits of kernel memory, you may get a panic like this:
# panic: kmem_malloc(131072): kmem_map too small: <totalkmem> total allocated
# this would be a sign you have memory tuning to do, or add physical RAM instead
#
#vm.kmem_size="6g"
#vm.kmem_size_max="512g"


## ZFS tunables

# ARC limits
# tune these in according with vm.kmem_size setting; you can increase it
# up to the value of vm.kmem_size minus 1GB.
#
# note: kernel memory size needs to be larger than maximum ARC size (arc_max)
# note: zfs uses more memory than just the ARC; don't make the ARC too big
#
# NOTE: the LiveCD has severely limited ZFS tuning; do not use for Root-on-ZFS!
vfs.zfs.arc_min="32m"
vfs.zfs.arc_max="64m"

# ARC metadata limits
# increase to cache more metadata (recommended if you have enough RAM)
#vfs.zfs.arc_meta_limit="128m"

# ZFS prefetch disable
# setting this value to 0 will force prefetching to be used even when
# ZFS considers it undesirable if you have <= 4GiB RAM or running 32-bit
#vfs.zfs.prefetch_disable="0"

# ZFS transaction groups (txg)
# ZFS is not unlike a transactional database in the sense that it processes
# your data in transaction groups. The bigger the txg is, the more data it
# can hold but also the longer flushing transaction groups will take.
# experiment with these values to improve temporary 'lags' or 'hangs' 
# override maximum txg size in bytes
#vfs.zfs.txg.write_limit_override="0"
# target number of seconds a txg will be synced (tune this!)
#vfs.zfs.txg.synctime="5"
# maximum number of seconds a txg will be synced (tune this!)
#vfs.zfs.txg.timeout="30"

# vdev cache settings
# should be safe to tune; but be careful about your memory limits
#vfs.zfs.vdev.cache.bshift="16"
#vfs.zfs.vdev.cache.size="10m"
#vfs.zfs.vdev.cache.max="16384"

# vdev pending requests
# this manages the minimum/maximum of outstanding I/Os on the vdevs
# this should be safe to tune; best setting depends on your disks
# ssds may prefer higher settings
#vfs.zfs.vdev.min_pending="4"
#vfs.zfs.vdev.max_pending="32"

# other vdev settings
# I/O requests are aggregated up to this size
#vfs.zfs.vdev.aggregation_limit="131072"
# exponential I/O issue ramp-up rate
#vfs.zfs.vdev.ramp_rate="2"
# used for calculating I/O request deadline
#vfs.zfs.vdev.time_shift="6"

# disable BIO flushes
# disables metadata sync mode and uses async I/O without flushes
# ONLY USE FOR PERFORMANCE TESTING
#vfs.zfs.cache_flush_disable="1"

# disable ZIL (ZFS Intent Log)
# warning: disabling can sometimes improve performance, but you can lose data
# that was recently written if a crash or power interruption occurs.
# ONLY USE FOR PERFORMANCE TESTING
#vfs.zfs.zil_disable="1"

## other tuning
kern.maxfiles="950000"
# fix for AOC-SAT2-MV8 (Marvell) controllers
hw.hptrr.attach_generic="0"
# quicker boot time by shortening boot menu countdown
autoboot_delay="2"
# delay booting to allow some devices to settle (needed for some systems)
kern.cam.boot_delay="10000"
# disable id labels
kern.geom.label.gptid.enable="0"
kern.geom.label.ufsid.enable="0"
# disable legacy device mappings (ada->ad)
kern.cam.ada.legacy_aliases="0"

## mandatory kernel modules (REQUIRED)
zfs_load="YES"
geom_uzip_load="YES"
tmpfs_load="YES"

## recommended kernel modules
# ahci (TRIM capable) driver
ahci_load="YES"
# package filter firewall
pf_load="YES"
# asynchronous I/O kernel module
aio_load="YES"

## optional kernel modules
# silicon image driver
siis_load="YES"
# mps: MPT Fusion 2 LSI SAS 6Gbps controller driver
mps_load="YES"
# padlock: VIA CPU-accelerated AES engine
#padlock_load="YES"
# aesni: Intel Core AES engine
#aesni_load="YES"
# following may be used in the future
#tmpfs_load="YES"
#geom_md_load="YES"
#nullfs_load="YES"
#unionfs_load="YES"

# end #
